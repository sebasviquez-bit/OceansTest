<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.1 (Python 3.8.5 on darwin)" generated="20200729 22:09:51.191" rpa="false">
<suite id="s1" name="Form" source="/Users/user/PycharmProjects/OceansTest/PracticeForm/Form.robot">
<kw name="Set Selenium Speed" library="SeleniumLibrary" type="setup">
<doc>Sets the delay that is waited after each Selenium command.</doc>
<arguments>
<arg>0.2s</arg>
</arguments>
<status status="PASS" starttime="20200729 22:09:51.372" endtime="20200729 22:09:51.373"></status>
</kw>
<test id="s1-t1" name="PracticeForm">
<kw name="OpenHomepage" library="Keywords">
<kw name="Open Browser" library="SeleniumLibrary">
<doc>Opens a new browser instance to the optional ``url``.</doc>
<arguments>
<arg>${URL}</arg>
<arg>${browser}</arg>
</arguments>
<msg timestamp="20200729 22:09:51.374" level="INFO">Opening browser 'chrome' to base url 'https://demoqa.com/automation-practice-form'.</msg>
<status status="PASS" starttime="20200729 22:09:51.374" endtime="20200729 22:09:59.799"></status>
</kw>
<kw name="Title Should Be" library="SeleniumLibrary">
<doc>Verifies that the current page title equals ``title``.</doc>
<arguments>
<arg>ToolsQA</arg>
</arguments>
<msg timestamp="20200729 22:10:00.009" level="INFO">Page title is 'ToolsQA'.</msg>
<status status="PASS" starttime="20200729 22:09:59.799" endtime="20200729 22:10:00.009"></status>
</kw>
<status status="PASS" starttime="20200729 22:09:51.373" endtime="20200729 22:10:00.010"></status>
</kw>
<kw name="Maximize Browser Window" library="SeleniumLibrary">
<doc>Maximizes current browser window.</doc>
<status status="PASS" starttime="20200729 22:10:00.010" endtime="20200729 22:10:00.369"></status>
</kw>
<kw name="Enter FirstName" library="Keywords">
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${FirstName}</arg>
<arg>Sebastian</arg>
</arguments>
<msg timestamp="20200729 22:10:00.370" level="INFO">Typing text 'Sebastian' into text field 'id: firstName'.</msg>
<status status="PASS" starttime="20200729 22:10:00.370" endtime="20200729 22:10:01.117"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:00.370" endtime="20200729 22:10:01.117"></status>
</kw>
<kw name="Enter LastName" library="Keywords">
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${LastName}</arg>
<arg>Viquez</arg>
</arguments>
<msg timestamp="20200729 22:10:01.118" level="INFO">Typing text 'Viquez' into text field 'id: lastName'.</msg>
<status status="PASS" starttime="20200729 22:10:01.118" endtime="20200729 22:10:01.811"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:01.118" endtime="20200729 22:10:01.811"></status>
</kw>
<kw name="Enter Email" library="Keywords">
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${Email}</arg>
<arg>sebas.viquez@gmail.com</arg>
</arguments>
<msg timestamp="20200729 22:10:01.812" level="INFO">Typing text 'sebas.viquez@gmail.com' into text field 'css: #userEmail'.</msg>
<status status="PASS" starttime="20200729 22:10:01.812" endtime="20200729 22:10:02.522"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:01.811" endtime="20200729 22:10:02.522"></status>
</kw>
<kw name="Select Gender" library="Keywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css:#genterWrapper &gt; div.col-md-9.col-sm-12 &gt; div:nth-child(1) &gt; label</arg>
</arguments>
<msg timestamp="20200729 22:10:02.524" level="INFO">Clicking element 'css:#genterWrapper &gt; div.col-md-9.col-sm-12 &gt; div:nth-child(1) &gt; label'.</msg>
<status status="PASS" starttime="20200729 22:10:02.523" endtime="20200729 22:10:02.985"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:02.523" endtime="20200729 22:10:02.986"></status>
</kw>
<kw name="Enter Mobile" library="Keywords">
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${Mobile}</arg>
<arg>5087118400</arg>
</arguments>
<msg timestamp="20200729 22:10:02.987" level="INFO">Typing text '5087118400' into text field 'css: #userNumber'.</msg>
<status status="PASS" starttime="20200729 22:10:02.986" endtime="20200729 22:10:03.698"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:02.986" endtime="20200729 22:10:03.698"></status>
</kw>
<kw name="Enter DateOfBirth" library="Keywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>${DateOfBirth}</arg>
</arguments>
<msg timestamp="20200729 22:10:03.699" level="INFO">Clicking element 'css: #dateOfBirthInput'.</msg>
<status status="PASS" starttime="20200729 22:10:03.699" endtime="20200729 22:10:04.212"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__header &gt; div.react-datepicker__header__dropdown.react-datepicker__header__dropdown--select &gt; div.react-datepicker__month-dropdown-container.react-datepicker__month-dropdown-container--select &gt; select &gt; option:nth-child(10)</arg>
</arguments>
<msg timestamp="20200729 22:10:04.213" level="INFO">Clicking element 'css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__header &gt; div.react-datepicker__header__dropdown.react-datepicker__header__dropdown--select &gt; div.react-datepicker__month-dropdown-container.react-datepicker__month-dropdown-container--select &gt; select &gt; option:nth-child(10)'.</msg>
<status status="PASS" starttime="20200729 22:10:04.212" endtime="20200729 22:10:04.679"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__header &gt; div.react-datepicker__header__dropdown.react-datepicker__header__dropdown--select &gt; div.react-datepicker__year-dropdown-container.react-datepicker__year-dropdown-container--select &gt; select &gt; option:nth-child(87)</arg>
</arguments>
<msg timestamp="20200729 22:10:04.679" level="INFO">Clicking element 'css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__header &gt; div.react-datepicker__header__dropdown.react-datepicker__header__dropdown--select &gt; div.react-datepicker__year-dropdown-container.react-datepicker__year-dropdown-container--select &gt; select &gt; option:nth-child(87)'.</msg>
<status status="PASS" starttime="20200729 22:10:04.679" endtime="20200729 22:10:05.134"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__month &gt; div:nth-child(4) &gt; div.react-datepicker__day.react-datepicker__day--020</arg>
</arguments>
<msg timestamp="20200729 22:10:05.134" level="INFO">Clicking element 'css: #dateOfBirth &gt; div.react-datepicker__tab-loop &gt; div.react-datepicker-popper &gt; div &gt; div &gt; div.react-datepicker__month-container &gt; div.react-datepicker__month &gt; div:nth-child(4) &gt; div.react-datepicker__day.react-datepicker__day--020'.</msg>
<status status="PASS" starttime="20200729 22:10:05.134" endtime="20200729 22:10:05.599"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:03.698" endtime="20200729 22:10:05.599"></status>
</kw>
<kw name="Select Hobbies" library="Keywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css: #hobbiesWrapper &gt; div.col-md-9.col-sm-12 &gt; div:nth-child(1) &gt; label</arg>
</arguments>
<msg timestamp="20200729 22:10:05.600" level="INFO">Clicking element 'css: #hobbiesWrapper &gt; div.col-md-9.col-sm-12 &gt; div:nth-child(1) &gt; label'.</msg>
<status status="PASS" starttime="20200729 22:10:05.600" endtime="20200729 22:10:06.053"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:05.600" endtime="20200729 22:10:06.053"></status>
</kw>
<kw name="Upload Picture" library="Keywords">
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<arguments>
<arg>${ChooseFile}</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:06.054" endtime="20200729 22:10:06.268"></status>
</kw>
<kw name="Choose File" library="SeleniumLibrary">
<doc>Inputs the ``file_path`` into the file input field ``locator``.</doc>
<arguments>
<arg>${ChooseFile}</arg>
<arg>/Users/user/PycharmProjects/OceansTest/PracticeForm/Product1.jpg</arg>
</arguments>
<msg timestamp="20200729 22:10:06.269" level="INFO">Sending /Users/user/PycharmProjects/OceansTest/PracticeForm/Product1.jpg to browser.</msg>
<status status="PASS" starttime="20200729 22:10:06.268" endtime="20200729 22:10:06.711"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:06.053" endtime="20200729 22:10:06.711"></status>
</kw>
<kw name="Enter Address" library="Keywords">
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>${Address}</arg>
<arg>Heredia</arg>
</arguments>
<msg timestamp="20200729 22:10:06.712" level="INFO">Typing text 'Heredia' into text field 'css: #currentAddress'.</msg>
<status status="PASS" starttime="20200729 22:10:06.712" endtime="20200729 22:10:07.399"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:06.712" endtime="20200729 22:10:07.399"></status>
</kw>
<kw name="Select State" library="Keywords">
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<arguments>
<arg>id:submit</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:07.400" endtime="20200729 22:10:08.083"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<arguments>
<arg>css:#state &gt; div &gt; div.css-1wy0on6</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:08.083" endtime="20200729 22:10:08.297"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css:#state &gt; div &gt; div.css-1wy0on6</arg>
</arguments>
<msg timestamp="20200729 22:10:08.297" level="INFO">Clicking element 'css:#state &gt; div &gt; div.css-1wy0on6'.</msg>
<status status="PASS" starttime="20200729 22:10:08.297" endtime="20200729 22:10:08.756"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>id: react-select-3-input</arg>
<arg>u</arg>
</arguments>
<msg timestamp="20200729 22:10:08.757" level="INFO">Typing text 'u' into text field 'id: react-select-3-input'.</msg>
<status status="PASS" starttime="20200729 22:10:08.756" endtime="20200729 22:10:09.435"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>id: react-select-3-input</arg>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20200729 22:10:09.435" level="INFO">Sending key(s) ('ENTER',) to id: react-select-3-input element.</msg>
<msg timestamp="20200729 22:10:10.111" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20200729 22:10:10.111" level="INFO">Releasing special key ENTER.</msg>
<status status="PASS" starttime="20200729 22:10:09.435" endtime="20200729 22:10:10.335"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:07.400" endtime="20200729 22:10:10.336"></status>
</kw>
<kw name="Select City" library="Keywords">
<kw name="Scroll Element Into View" library="SeleniumLibrary">
<doc>Scrolls the element identified by ``locator`` into view.</doc>
<arguments>
<arg>id:submit</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:10.336" endtime="20200729 22:10:11.007"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<arguments>
<arg>css: #city &gt; div &gt; div.css-1wy0on6 &gt; div</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:11.007" endtime="20200729 22:10:11.220"></status>
</kw>
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>css: #city &gt; div &gt; div.css-1wy0on6 &gt; div</arg>
</arguments>
<msg timestamp="20200729 22:10:11.221" level="INFO">Clicking element 'css: #city &gt; div &gt; div.css-1wy0on6 &gt; div'.</msg>
<status status="PASS" starttime="20200729 22:10:11.220" endtime="20200729 22:10:11.671"></status>
</kw>
<kw name="Input Text" library="SeleniumLibrary">
<doc>Types the given ``text`` into the text field identified by ``locator``.</doc>
<arguments>
<arg>id: react-select-4-input</arg>
<arg>a</arg>
</arguments>
<msg timestamp="20200729 22:10:11.671" level="INFO">Typing text 'a' into text field 'id: react-select-4-input'.</msg>
<status status="PASS" starttime="20200729 22:10:11.671" endtime="20200729 22:10:12.339"></status>
</kw>
<kw name="Press Keys" library="SeleniumLibrary">
<doc>Simulates the user pressing key(s) to an element or on the active browser.</doc>
<arguments>
<arg>react-select-4-input</arg>
<arg>ENTER</arg>
</arguments>
<msg timestamp="20200729 22:10:12.339" level="INFO">Sending key(s) ('ENTER',) to react-select-4-input element.</msg>
<msg timestamp="20200729 22:10:13.019" level="INFO">Pressing special key ENTER to element.</msg>
<msg timestamp="20200729 22:10:13.019" level="INFO">Releasing special key ENTER.</msg>
<status status="PASS" starttime="20200729 22:10:12.339" endtime="20200729 22:10:13.236"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:10.336" endtime="20200729 22:10:13.236"></status>
</kw>
<kw name="Click Submit" library="Keywords">
<kw name="Click Element" library="SeleniumLibrary">
<doc>Click the element identified by ``locator``.</doc>
<arguments>
<arg>id: submit</arg>
</arguments>
<msg timestamp="20200729 22:10:13.237" level="INFO">Clicking element 'id: submit'.</msg>
<status status="PASS" starttime="20200729 22:10:13.237" endtime="20200729 22:10:13.706"></status>
</kw>
<kw name="Wait Until Page Contains Element" library="SeleniumLibrary">
<doc>Waits until the element ``locator`` appears on the current page.</doc>
<arguments>
<arg>id: example-modal-sizes-title-lg</arg>
</arguments>
<status status="PASS" starttime="20200729 22:10:13.706" endtime="20200729 22:10:13.927"></status>
</kw>
<status status="PASS" starttime="20200729 22:10:13.237" endtime="20200729 22:10:13.927"></status>
</kw>
<status status="PASS" starttime="20200729 22:09:51.373" endtime="20200729 22:10:13.928" critical="yes"></status>
</test>
<kw name="Close Browser" library="SeleniumLibrary" type="teardown">
<doc>Closes the current browser.</doc>
<status status="PASS" starttime="20200729 22:10:13.929" endtime="20200729 22:10:14.198"></status>
</kw>
<status status="PASS" starttime="20200729 22:09:51.192" endtime="20200729 22:10:14.198"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="0">Critical Tests</stat>
<stat pass="1" fail="0">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="1" fail="0" id="s1" name="Form">Form</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
